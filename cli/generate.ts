import fs from 'fs';
import { getSchemaPath, processSchemaFile } from "./common";

const basePath = process.argv[2];

const rootSchemas = [
  'https://schema.management.azure.com/schemas/common/autogeneratedResources.json',
  'https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json',
];

function findRefs(schema: any, refs: string[]) {
  if (Array.isArray(schema)) {
    for (const entry of schema) {
      findRefs(entry, refs);
    }
    return;
  }
  
  if (schema instanceof Object) {
    const foundRef = schema.$ref as string;
    if (foundRef) {
      refs.push(foundRef);
    }

    for (const key of Object.keys(schema)) {
      findRefs(schema[key], refs);
    }
    return;
  }
}

const refs: string[] = [];
for (const schemaUri of rootSchemas) {
  const schemaPath = getSchemaPath(basePath, schemaUri);
  const schema = JSON.parse(fs.readFileSync(schemaPath, { encoding: 'utf8' }));

  findRefs(schema, refs)
}

const uris = refs
  .map(r => r.split('#')[0])
  .filter(r => r.length > 0 && !r.startsWith('https://schema.management.azure.com/schemas/common/'));

const uniqueUris = [...new Set(uris)].sort();

for (const schemaUri of uniqueUris) {
  try {
    processSchemaFile(basePath, schemaUri);
  } catch (e) {
    console.error(`Error processing ${schemaUri}: ${e}`);
  }
}